#xml parser library
#import xml.etree.ElementTree as ET
import os.path
import os

print("SwSAPSA: _rb removal post processing Tool...\n")

# input 
#print("Enterthe src FC folder path:")
#fcFolderName = input() 
fcFolderName = os.getcwd()
print("FC Folder\n", fcFolderName)       
i = 0
try:
    
    print("SwSAPSA: _rb removal post processing started...\n")
    
    #Identify the C-FIle to be patched    
    for file in os.listdir(fcFolderName):
        if file.endswith(".c_rb"):
            i = 1
    if i == 0:
        for file in os.listdir(fcFolderName):
            if file.endswith(".c"):
                cFileToModify = os.path.join(fcFolderName, file)
                os.rename(cFileToModify, cFileToModify.replace('.c', '.c_rb'))                    
            
    for file in os.listdir(fcFolderName):
        if file.endswith(".c_rb"):
            cFileToModify = os.path.join(fcFolderName, file)
            
    #Print the File Name
    print('C-File Name:', cFileToModify)
    
    cFile = open(cFileToModify).read()  
    # Replace _rb is the assignments and calculation      
    cFile = cFile.replace('_rb ', ' ')    
    #Replace _rb with RteWrite or Read APIs
    cFile = cFile.replace('_rb)', ')') 
	#Replace _rb with srv_limit
    cFile = cFile.replace('_rb,', ',')
    cFileNew = open((os.path.splitext(cFileToModify)[0]) + ".c", 'w')
    cFileNew.write(cFile)
    cFileNew.close()
    
    print("C-File Modification completed ...\n")
    i = 0
    #Identify the PaVaSt to be patched    
    for file in os.listdir(fcFolderName):
        if file.endswith("_pavast.xml_rb"):
            i = 2
    if i == 0:
        for file in os.listdir(fcFolderName):
            if file.endswith("_pavast.xml"):
                pavastFileToModify = os.path.join(fcFolderName, file)
                os.rename(pavastFileToModify, pavastFileToModify.replace('.xml', '.xml_rb'))
            
    for file in os.listdir(fcFolderName):
        if file.endswith("_pavast.xml_rb"):
            pavastFileToModify = os.path.join(fcFolderName, file)
            
    #Print the File Name
    print('PaVaSt-File Name:', pavastFileToModify) 
    
    #XML library usage is not working as expected  
    '''
    with open(pavastFileToModify, encoding="ISO-8859-1") as pavast:
        tree = ET.parse(pavast)
        root = tree.getroot()
        
        for elem in root.getiterator():
            try:
                elem.text = elem.text.replace('_rb', '')                
            except AttributeError:
                pass
            
    comment = ET.Comment('Generated by Glens nmap XML merger (gnxmerge)')
    root.append(comment)    
    tree.write(os.path.splitext(pavastFileToModify)[0] + '_Mod.xml', encoding="ISO-8859-1") 
    '''
    
    pavastFile = open(pavastFileToModify).read()        
    pavastFile = pavastFile.replace('_rb<', '<')
    pavastFile = pavastFile.replace('_RB<', '<')
    
    pavastFileNew = open((os.path.splitext(pavastFileToModify)[0]) + ".xml", 'w')
    pavastFileNew.write(pavastFile)
    pavastFileNew.close()
    
    print("PaVaSt File Modification completed ...\n")    
    
except ValueError as outputError:
    print(outputError)  
    
print("SwSAPSA: _rb removal post processing Finished...")

#os.system("pause")

